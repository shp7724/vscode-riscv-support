{
	
	"two's complement": {
		"prefix": "neg",
		"body": "neg\t${1:t0}, ${2:t1}; # $1 = -$2\n",
		"description": "two's complement",
		"scope": "source.riscv"
	},
	
	"set less than": {
		"prefix": "slt",
		"body": "slt\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = ($2 < $3) ? 1 : 0\n",
		"description": "set less than",
		"scope": "source.riscv"
	},
	
	"set less than immediate": {
		"prefix": "slti",
		"body": "slti\t${1:t0}, ${2:t1}, ${3:imm}; # $1 = ($2 < $3) ? 1 : 0\n",
		"description": "set less than immediate",
		"scope": "source.riscv"
	},
	
	"set less than unsigned": {
		"prefix": "sltu",
		"body": "sltu\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = ($2 <U $3) ? 1 : 0\n",
		"description": "set less than unsigned",
		"scope": "source.riscv"
	},
	
	"set less than immediate unsigned": {
		"prefix": "sltiu",
		"body": "sltiu\t${1:t0}, ${2:t1}, ${3:imm}; # $1 = ($2 <U $3) ? 1 : 0\n",
		"description": "set less than immediate unsigned",
		"scope": "source.riscv"
	},
	
	
	
	"bitwise and": {
		"prefix": "and",
		"body": "and\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = $2 & $3\n",
		"description": "bitwise and",
		"scope": "source.riscv"
	},
	"bitwise or": {
		"prefix": "or",
		"body": "or\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = $2 | $3\n",
		"description": "bitwise or",
		"scope": "source.riscv"
	},
	"bitwise xor": {
		"prefix": "xor",
		"body": "xor\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = $2 ^ $3\n",
		"description": "bitwise xor",
		"scope": "source.riscv"
	},
	
	"bitwise and": {
		"prefix": "andi",
		"body": "andi\t${1:t0}, ${2:t1}, ${3:imm}; # $1 = $2 & $3\n",
		"description": "bitwise and",
		"scope": "source.riscv"
	},
	"bitwise or": {
		"prefix": "ori",
		"body": "ori\t${1:t0}, ${2:t1}, ${3:imm}; # $1 = $2 | $3\n",
		"description": "bitwise or",
		"scope": "source.riscv"
	},
	"bitwise xor": {
		"prefix": "xori",
		"body": "xori\t${1:t0}, ${2:t1}, ${3:imm}; # $1 = $2 ^ $3\n",
		"description": "bitwise xor",
		"scope": "source.riscv"
	},
	
	"shift left logical": {
		"prefix": "sll",
		"body": "sll\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = $2 << $3\n",
		"description": "shift left logical",
		"scope": "source.riscv"
	},
	"shift right logical": {
		"prefix": "srl",
		"body": "srl\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = $2 >>U $3\n",
		"description": "shift right logical",
		"scope": "source.riscv"
	},
	"shift right arithmetic": {
		"prefix": "sra",
		"body": "sra\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = $2 >> $3\n",
		"description": "shift right arithmetic",
		"scope": "source.riscv"
	},
	
	"shift left logical immediate": {
		"prefix": "slli",
		"body": "slli\t${1:t0}, ${2:t1}, ${3:shamt}; # $1 = $2 << $3\n",
		"description": "shift left logical immediate",
		"scope": "source.riscv"
	},
	"shift right logical immediate": {
		"prefix": "srli",
		"body": "srli\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = $2 >>U $3\n",
		"description": "shift right logical immediate",
		"scope": "source.riscv"
	},
	"shift right arithmetic immediate": {
		"prefix": "srai",
		"body": "srai\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = $2 >> $3\n",
		"description": "shift right arithmetic immediate",
		"scope": "source.riscv"
	},
	
	"add immediate": {
		"prefix": "addi",
		"body": "addi\t${1:t0}, ${2:t1}, ${3:imm}; # $1 = $2 + $3\n",
		"description": "add immediate",
		"scope": "source.riscv"
	},
	"add": {
		"prefix": "add",
		"body": "add\t${1:t0}, ${2:t1}, ${3:t2}; # $1 = $2 + $3\n",
		"description": "add",
		"scope": "source.riscv"
	},
	"branch if equal": {
		"prefix": "beq",
		"body": "beq\t${1:t0}, ${2:t1}, ${3:target}; # if $1 == $2 then $3\n",
		"description": "branch if equal",
		"scope": "source.riscv"
	},
	"branch if greater then or equal": {
		"prefix": "bge",
		"body": "bge\t${1:t0}, ${2:t1}, ${3:target} # if $1 >= $2 then $3\n",
		"description": "branch if greater then or equal",
		"scope": "source.riscv"
	},
	"branch if greater then": {
		"prefix": "bgt",
		"body": "bgt\t${1:t0}, ${2:t1}, ${3:target} # if $1 > $2 then $3\n",
		"description": "branch if greater then",
		"scope": "source.riscv"
	},
	"branch if less then or equal": {
		"prefix": "ble",
		"body": "ble\t${1:t0}, ${2:t1}, ${3:target} # if $1 <= $2 then $3\n",
		"description": "branch if less then or equal",
		"scope": "source.riscv"
	},
	"branch if less then": {
		"prefix": "blt",
		"body": "blt\t${1:t0}, ${2:t1}, ${3:target} # if $1 < $2 then $3\n",
		"description": "branch if less then",
		"scope": "source.riscv"
	},
	"branch if not equal": {
		"prefix": "bne",
		"body": "bne\t${1:t0}, ${2:t1}, ${3:target} # if $1 != $2 then $3\n",
		"description": "branch if not equal",
		"scope": "source.riscv"
	},
	
	"call function": {
		"prefix": "call",
		"body": "call\t${1:target}; # jump to $1 and save position to ra\n",
		"description": "call function",
		"scope": "source.riscv"
	},
	
	"jump and link": {
		"prefix": "jal",
		"body": "jal\t${1:t0}, ${2:target} # jump to $1 and save position to $0\n",
		"description": "jump and link",
		"scope": "source.riscv"
	},
	"jump register": {
		"prefix": "jr",
		"body": "jr\t${1:ra} # jump to $1\n",
		"description": "jump register",
		"scope": "source.riscv"
	},
	"unconditional jump": {
		"prefix": "j",
		"body": "j\t${1:target} # jump to $1\n",
		"description": "unconditional jump",
		"scope": "source.riscv"
	},
	"load address": {
		"prefix": "la",
		"body": "la\t${1:t1}, ${2:var1} # ",
		"description": "load address",
		"scope": "source.riscv"
	},
	"load byte": {
		"prefix": "lb",
		"body": "lb\t${1:t1}, ${2:${3:0}(${4:s1})} # ",
		"description": "load byte",
		"scope": "source.riscv"
	},
	"load immediate": {
		"prefix": "li",
		"body": "li\t${1:t1}, $2 # $1 = $2\n",
		"description": "load immediate",
		"scope": "source.riscv"
	},
	"load word": {
		"prefix": "lw",
		"body": "lw\t${1:t1}, ${2:${3:0}(${4:s1})} # ",
		"description": "load word",
		"scope": "source.riscv"
	},
	"move": {
		"prefix": "mv",
		"body": "mv\t${1:t0}, ${2:t1} # $1 = $2",
		"description": "move",
		"scope": "source.riscv"
	},
	"store byte": {
		"prefix": "sb",
		"body": "sb\t${1:t1}, ${2:${3:0}(${4:s1})} # ",
		"description": "store byte",
		"scope": "source.riscv"
	},
	"store word": {
		"prefix": "sw",
		"body": "sw\t${1:t1}, ${2:${3:0}(${4:s1})} # ",
		"description": "store word",
		"scope": "source.riscv"
	},
	"string var": {
		"prefix": "string",
		"body": "${1:string}: .asciiz \"$2\"",
		"description": "string var",
		"scope": "source.riscv"
	},
	"substract": {
		"prefix": "sub",
		"body": "sub\t${1:t0}, ${2:t1}, ${3:t2} # $1 = $2 - $3\n",
		"description": "substract",
		"scope": "source.riscv"
	},
	"variable": {
		"prefix": "var",
		"body": "${1:var}: .${2:word} $3",
		"description": "variable",
		"scope": "source.riscv"
	}
}
